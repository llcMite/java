方法：void意思是没有返回值
   不带参没有返回值的方法
     public void fn(){}
   不带参有返回值的方法
     public string fn(){}
   带参没有返回值的方法
     public void fn(float num1){}
   带参有返回值的方法
     public float fn(string str1){}

静态初始化块里的变量，可直接调用，构造方法里的的变量需要调用对象下的属性，同理初始化块与构造方法下的变量调用方法一样




面向对象的特性：
    1：封装
	    1）概念：将类的某型信息隐藏在类内部，不允许外部程序直接访问，而是听过该类提供的方法来实现对隐藏信息的操作和访问
        2）好处：a、只能通过指定的方法访问数据
		         b、隐藏类的实例细节，方便修改和实现
			封装的事项步骤：
                修改属性的可见性：设为private
                创建getter/setter方法 ：用于属性的读写
                在getter/setter方法中加入属性控制语句：对属性合法值进行判断
				
			标准使用setter和getter方法给操作属性，直接操作属性是不规范的
    2：继承            				
	3：多态
	
使用包管理java中的类
    1.包的作用：
	  管理java文件
	  解决同名文件的冲突
	2.定义包：package包名
	  注：必须放在java源程序的第一行
          包名间可以使用“.”号隔开
          示例：com.imooc.MyClass
	3:系统中的包
       java.(功能).(类)
       java.lang.(类) 包含java语言基础的类
       java.util.(类) 包含java语言中各种工具类
       java.io(类) 包含输入、输出相关功能的类	   
	   
    4:包的使用
	   1、可以用import关键字，在某个文件使用其他文件中的类
	   import com.imooc.music.MyClass
	   2、java中，包的命名规范是全小写字母拼写
	   3、使用的时候不但可以加载某个包下的所有文件
	      示例：com.imooc.*
		  也可以加载某个具体子包下的所有文件
		  示例：com.imooc.music.*

		  
java中的访问修饰符
    private  只能在同类里访问
	默认     本类和同包里可以访问
	protected 本类和同包和子类都可以访问  
	public    都可以访问
	
java中的this关键字
   指的是当前对象
   它可以在类里面来引用这个类的属性和方法
   1） this 关键字是类内部当中对自己的一个引用，可以方便类中方法访问自己的属性；

   2）可以返回对象的自己这个类的引用，同时还可以在一个构造函数当中调用另一个构造函数。

java中的内部类
   内部类就是定义在另外一个类里面的类。
   包含内部类的类叫做外部类
   
   1、内部类的作用，内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许其他类访问
   2、内部类的方法可以访问外部类的所有数据，包括私有的数据
   
   3、内部类所是想的功能使用外部类同样可以实现，只是有时使用外部类更方便
   
   实现方式：
     成员内部类
	 静态内部类
	 方法内部类
	 匿名内部类
	 
   // 创建外部类对象
		HelloWorld hello = new HelloWorld();
   // 创建内部类对象
		Inner i = hello.new Inner();
   
    如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，如果要访问外部类的成员变量，可以使用 this 关键字。
	HelloWorld.this.name 调用外部类属性
	
1、 静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员 的方式访问 

2、 如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；如果外部类的静态成员与内部类的成员名称不相同，则可通过“成员名”直接调用外部类的静态成员

3、 创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名= new 内部类();

    方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，即只在该方法内可以使用。
	

java中的继承：
   类与类的一种关系
   语法规则
      class 子类 extends 父类
	  class Dog extends Animal{
	  }
	private 不能继承
	
java方法的重写：
    继承父类的方法不满意，要重写，调用时优先调用子类里的方法
	
java继承的初始化顺序
    1、初始化父类再初始化子类
	2、先执行初始化对象中的属性。再执行构造方法中的初始化
	
final关键字
    使用final关键字做标识有‘最终的’含义
	final可以修饰类，方法，属性和变量
	   修饰类，则该类不能继承
	
    